__author__ = 'Nicholas'
#!/usr/bin/env python
# -*- coding: utf-8 -*-

import tweepy, time, sys
import urllib2
import simplejson
import cStringIO
from PIL import Image
from PyDictionary import PyDictionary
import sbi

# Initialize the dictionary
dictionary=PyDictionary()

# Links this bot to the Twitter account: RelatedWordsBot
CONSUMER_KEY = 'I9UkSxDNjbvYDtUQnmJGF2SAH'
CONSUMER_SECRET = 'YkEv5PXQtaux1yf8duN1CUYWPaMpyroBQSNXmN24fmHiAQtDMd'
ACCESS_KEY = '4340105542-dBRVFG4Z4MFjsHmZq7gBHO98rH2rHfyxMsjftJp'
ACCESS_SECRET = 'oUEbFlcQBCYnp1fRKbGNefegyLPsEs3DwjVVCqx9RdnGF'
auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(ACCESS_KEY, ACCESS_SECRET)
api = tweepy.API(auth)

# Access most recent Tweet from account
tweets = api.user_timeline('RelatedWordsBot')
mostRecent = tweets[0]

contents = str(mostRecent.text)
index = 0

for x in range(0, len(contents)):
    if (contents[x] == " "):
        index = x

# Word to generate related word from
searchWords = contents.split(" ")
searchWord = searchWords[len(searchWords) - 2].replace(" ", "")

relatedWords = dictionary.synonym(searchWord)

relatedWord = relatedWords[0]

# Word previously generated by bot
prevWord = contents[0 : index]

# Get the image previously generated by the bot
for media in mostRecent.entities.get("media",[{}]):
    #checks if there is any media-entity
    if media.get("type",None) == "photo":
        # checks if the entity is of the type "photo"
        imgUrl = media["media_url"]
        # save to file etc.

result = sbi.search_by(url=imgUrl)

fetcher = urllib2.build_opener()
searchTerm = relatedWord
startIndex = 0
searchUrl = "http://ajax.googleapis.com/ajax/services/search/images?v=1.0&q=" + searchTerm + "&start=" + str(startIndex)
f = fetcher.open(searchUrl)
deserialized_output = simplejson.load(f)

imageUrl = deserialized_output['responseData']['results'][0]['unescapedUrl']
file = cStringIO.StringIO(urllib2.urlopen(imageUrl).read())
img = Image.open(file)

file2  = cStringIO.StringIO(urllib2.urlopen(imgUrl).read())
img2 = Image.open(file2)

### Combine Images ###
sameSize = img2.resize(img.size)

background = img.convert("RGB")
sameSize = sameSize.convert("RGB")

new_img = Image.blend(background, sameSize, 0.5)
new_img.save("new.jpg")

status = prevWord + " " + searchTerm.capitalize()

# Update ststus with related word and merged image
api.update_with_media(filename="new.jpg", status=status)

